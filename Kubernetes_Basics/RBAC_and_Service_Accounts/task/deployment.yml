apiVersion: apps/v1
kind: Deployment
metadata:
 name: kube2py
 namespace: mateapp
spec:
 replicas: 4
 strategy:
   type: RollingUpdate
   rollingUpdate:
     maxUnavailable: 1
     maxSurge: 1
 selector:
   matchLabels:
     app: kube2py
 template:
   metadata:
     labels:
       app: kube2py
   spec:
     containers:
     - name: kube2py
       image: ikulyk404/kube2py:2.0.0
       volumeMounts:
       - name: data
         mountPath: /app/data
       resources:
         requests:
           memory: "64Mi"
           cpu: "30m"
         limits:
           memory: "64Mi"
           cpu: "30m"
       ports:
       - containerPort: 8080
       env:
       - name: EXTERNAL_ENDPOINT
         valueFrom:
           secretKeyRef:
             name: app-secret
             key: external_endpoint
       - name: APP_ENV
         valueFrom:
           configMapKeyRef:
             name: app-config
             key: APP_ENV
       livenessProbe:
         httpGet:
           path: /health
           port: 8080
         initialDelaySeconds: 60
         periodSeconds: 5
       readinessProbe:
         httpGet:
           path: /ready
           port: 8080
         initialDelaySeconds: 5
         periodSeconds: 5
     volumes:
     - name: data
       emptyDir: {}
     tolerations:
      - key: "app"
        operator: "Equal"
        value: "kube2py"
        effect: "NoSchedule"
     affinity:
       podAntiAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           - labelSelector:
               matchExpressions:
                 - key: app
                   operator: In
                   values:
                     - busybox
             topologyKey: "kubernetes.io/hostname" # в межах ноди на якій є ця label, буде працювати це правило що ми написали вище
       nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
             - matchExpressions:
                 - key: "app"
                   operator: In
                   values:
                     - "kube2py"